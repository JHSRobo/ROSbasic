#catkin_ws has been changed to ros_workspace

# Generic .travis.yml file for running continuous integration on Travis-CI for
# any ROS package.
#
# Available here:
#   - https://github.com/felixduvallet/ros-travis-integration
#
# This installs ROS on a clean Travis-CI virtual machine, creates a ROS
# workspace, resolves all listed dependencies, and sets environment variables
# (setup.bash). Then, it compiles the entire ROS workspace (ensuring there are
# no compilation errors), and runs all the tests. If any of the compilation/test
# phases fail, the build is marked as a failure.
#
# We handle two types of package dependencies specified in the package manifest:
#   - system dependencies that can be installed using `rosdep`, including other
#     ROS packages and system libraries. These dependencies must be known to
#     `rosdistro` and are installed using apt-get.
#   - package dependencies that must be checked out from source. These are handled by
#     `wstool`, and should be listed in a file named dependencies.rosinstall.
#

# There are envioronment variables you may want to change, such as ROS_DISTRO,
# ROSINSTALL_FILE, and the CATKIN_OPTIONS file.  See the README.md for more
# information on these flags, and
# https://docs.travis-ci.com/user/environment-variables/ for information about
# Travis environment variables in general.
#
# Author: Felix Duvallet <felixd@gmail.com>

# NOTE: The build lifecycle on Travis.ci is something like this:
#    before_install
#    install
#    before_script
#    script
#    after_success or after_failure
#    after_script
#    OPTIONAL before_deploy
#    OPTIONAL deploy
#    OPTIONAL after_deploy

################################################################################

# Use ubuntu trusty (14.04) with sudo privileges.
dist: xenial xerus
sudo: required
language:
  - cpp
  - python
cache:
  - apt
  
notifications:
  email: false

# Configuration variables. All variables are global now, but this can be used to
# trigger a build matrix for different ROS distributions if desired.
env:
  global:
    - ROS_DISTRO=kinetic

################################################################################

# Install system dependencies, namely a very barebones ROS setup.
before_install:
  - sudo apt-get update
  - sudo apt-get upgrade
  - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
  - sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
  - sudo apt-get install ros-kinetic-desktop-full
  - sudo rosdep init
  - rosdep update
  - echo "source /opt/ros/kinetic/setup.bash" >> ~/.bashrc
  - source ~/.bashrc
  - sudo apt-get install python-rosinstall python-rosinstall-generator python-wstool build-essential
  - sudo add-apt-repository ppa:deadsnakes/ppa
  - sudo apt-get install python3.6
  - sudo apt-get install python-pip python-dev
  - sudo pip install --upgrade pip
  - sudo pip install --upgrade virtualenv
  - sudo apt-get install git
  - sudo apt-get install g++ cmake


# Create a catkin workspace with the package under integration.
install:
  - cd ~/ros_workspace
  - catkin_make
  - source devel/setup.bash

script:
  - source devel/setup.bash
  - catkin_make run_tests && catkin_test_results
